type Submission @model @key(name: "byPerson", fields: ["personID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  submittedAt: String!
  temperature: Float!
  meetsCriteria: Boolean!
  hasCertified: Boolean!
  submittedBy: Person! @connection
  submittedFor: Person! @connection
  personID: ID!
}

type Family @model @auth(rules: [{allow: public}]) {
  id: ID!
  people: [Person] @connection(keyName: "byFamily", fields: ["id"])
  createdAt: String!
}

type Person @model @key(name: "byDivision", fields: ["divisionID"]) @key(name: "byCategory", fields: ["categoryID"]) @key(name: "byFamily", fields: ["familyID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String!
  lastName: String!
  phone: String
  studentID: String
  divisionID: ID!
  categoryID: ID!
  familyID: ID!
  submissions: [Submission] @connection(keyName: "byPerson", fields: ["id"])
  createdAt: String!
}

type Division @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  people: [Person] @connection(keyName: "byDivision", fields: ["id"])
}

type Category @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  people: [Person] @connection(keyName: "byCategory", fields: ["id"])
}
 