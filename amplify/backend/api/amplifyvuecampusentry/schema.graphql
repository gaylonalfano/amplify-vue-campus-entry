enum QuestionType {
  ID
  TEXT
  BOOLEAN
  SINGLESELECT
  MULTISELECT
  SIGNATURE
}

type Question @model @auth(rules: [{allow: public}]) {
  id: ID!
  questionType: QuestionType!
  titleEnglish: String!
  titleChinese: String!
  contentEnglish: String
  contentChinese: String
}

type Submission @model @auth(rules: [{allow: public}]) @key(name: "byPerson", fields: ["personID"]) @key(name: "byFamily", fields: ["familyID"]) {
  id: ID!
  submissionType: SubmissionType!
  submittedAt: String!
  temperature: Float
  conditionsMet: Boolean!
  signature: Boolean!
  division: Division
  firstName: String!
  lastName: String!
  phone: String!
  parentID: ID
  parentName: String
  parentPhone: String
  personID: ID!
  familyID: ID
  consultantType: ConsultantType
}

enum FamilyMemberType {
  PARENT
  CHILD
}

enum SubmissionType {
  STUDENT
  EMPLOYEE
  VISITOR
  CONSULTANT
}

type Family @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: String!
  updatedAt: String!
  members: [Person] @connection(keyName: "byFamily", fields: ["id"])
  submissions: [Submission] @connection(keyName: "byFamily", fields: ["id"])
}

type Person @model @auth(rules: [{allow: public}]) @key(name: "byFamily", fields: ["familyID"]) {
  id: ID!
  firstName: String!
  lastName: String!
  phone: String
  email: String
  division: Division
  fatherPhone: String
  motherPhone: String
  fatherEmail: String
  motherEmail: String
  createdAt: String!
  updatedAt: String!
  submissionType: SubmissionType!
  isAuthenticatedUser: Boolean!
  familyMemberType: FamilyMemberType
  familyID: ID
  consultantType: ConsultantType
  governmentID: String
  submissions: [Submission] @connection(keyName: "byPerson", fields: ["id"])
}

enum ConsultantType {
  CONTRACTOR
  SCHOOLBUSDRIVER
  SCHOOLBUSMONITOR
  SUBSTITUTETEACHER
  CONSULTANT
  CCAINSTRUCTOR
}

enum Division {
  EC
  ES
  MS
  HS
  ALLSCHOOL
}
  